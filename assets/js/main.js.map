{"version":3,"sources":["main.js"],"names":["$","click","this","slideUp","nav","responsiveNav","magnificPopup","type","mainClass","overflowY","closeOnContentClick","closeOnBgClick","showCloseBtn","enableEscapeKey","zoom","enabled","duration","easing","opener","openerElement","is","find","pathname","on","toggleClass","btn","left","offsetLeft","width","top","offsetTop","height","css","autosize","window","location","history","replaceState","blur","$this","val","addClass","removeClass"],"mappings":"AAEAA,EAAE,WACAA,EAAE,gBAAgBC,MAAM,WACtBD,EAAEE,MAAMC,aAIZ,IAAIC,KAAMC,cAAc,WAExBL,GAAE,aAAaM,eACbC,KAAM,QACNC,UAAW,gBACXC,UAAW,SACXC,qBAAqB,EACrBC,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,MACEC,SAAS,EAETC,SAAU,IACVC,OAAQ,cAKRC,OAAQ,SAASC,GAGf,MAAOA,GAAcC,GAAG,OAASD,EAAgBA,EAAcE,KAAK,UAKxE,IAAIC,SAEJtB,GAAE,YAAYuB,GAAG,QAAS,WACxBvB,EAAE,QAAQwB,YAAY,gBACtB,IAAIC,GAAMzB,EAAE,YACR0B,EAAOD,EAAI,GAAGE,WAAaF,EAAIG,QAAQ,EACvCC,EAAMJ,EAAI,GAAGK,UAAYL,EAAIM,SAAS,CAC1C/B,GAAE,uBAAuBgC,IAAI,cAAeN,GAC5C1B,EAAE,uBAAuBgC,IAAI,aAAcH,GAC3CI,SAASjC,EAAE,sBACXsB,SAAWY,OAAOC,SAASb,SAC3BY,OAAOE,QAAQC,gBAAiB,GAAI,eAGtCrC,EAAE,mBAAmBuB,GAAG,QAAS,WAC7BvB,EAAE,QAAQwB,YAAY,iBACN,MAAZF,SACFY,OAAOE,QAAQC,gBAAiB,GAAI,KAEpCH,OAAOE,QAAQC,gBAAiB,GAAIf,YAI1CtB,EAAE,mBAAmBsC,KAAK,WACxB,GAAIC,GAAQvC,EAAEE,KACVqC,GAAMC,MACRD,EAAME,SAAS,QAEfF,EAAMG,YAAY","file":"main.js","sourcesContent":["// http://unheap.com\n\n$(function() {\n  $('.browsehappy').click(function() {\n    $(this).slideUp();\n  });\n});\n\nvar nav = responsiveNav(\".siteNav\");\n  \n$('.magnific').magnificPopup({\n  type: 'image',\n  mainClass: 'mfp-with-zoom', // this class is for CSS animation below\n  overflowY: 'scroll',\n  closeOnContentClick: true,\n  closeOnBgClick: true,\n  showCloseBtn: false,\n  enableEscapeKey: true,\n  zoom: {\n    enabled: true, // By default it's false, so don't forget to enable it\n\n    duration: 300, // duration of the effect, in milliseconds\n    easing: 'ease-in-out', // CSS transition easing function\n\n    // The \"opener\" function should return the element from which popup will be zoomed in\n    // and to which popup will be scaled down\n    // By defailt it looks for an image tag:\n    opener: function(openerElement) {\n      // openerElement is the element on which popup was initialized, in this case its <a> tag\n      // you don't need to add \"opener\" option if this code matches your needs, it's defailt one.\n      return openerElement.is('img') ? openerElement : openerElement.find('img');\n    }\n  }\n  });\n\n  var pathname;\n\n  $(\".contact\").on('click', function(){\n    $(\"body\").toggleClass(\"contact__open\");\n    var btn = $('.contact');\n    var left = btn[0].offsetLeft + btn.width()/2;\n    var top = btn[0].offsetTop + btn.height()/2;\n    $(\".contact__animation\").css('margin-left', left);\n    $(\".contact__animation\").css('margin-top', top);\n    autosize($('#contact__message'));\n    pathname = window.location.pathname;\n    window.history.replaceState({}, '', '/contact/');\n  });\n\n  $(\".contact__close\").on(\"click\", function() {\n      $(\"body\").toggleClass(\"contact__open\");\n      if (pathname == null) {\n        window.history.replaceState({}, '', '/');\n      } else {\n        window.history.replaceState({}, '', pathname);\n      }\n  });\n\n  $('.contact__field').blur(function() {\n    var $this = $(this);\n    if ($this.val())\n      $this.addClass('used');\n    else\n      $this.removeClass('used');\n  });"],"sourceRoot":"/source/"}